{
  "AWSTemplateFormatVersion" : "2010-09-09",
  
  "Description" : "AWS CloudFormation Sample Template LAMP_Single_Instance: Create a LAMP stack using a single EC2 instance and a local MySQL database for storage. This template demonstrates using the AWS CloudFormation bootstrap scripts to install the packages and files necessary to deploy the Apache web server, PHP and MySQL at instance launch time. **WARNING** This template creates an Amazon EC2 instance. You will be billed for the AWS resources used if you create a stack from this template.",
  
  "Parameters" : {
      
    "DBRootPassword": {
      "NoEcho": "true",
      "Description" : "Root password for MySQL",
      "Default" : "admin",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "41",
      "AllowedPattern" : "[a-zA-Z0-9]*",
      "ConstraintDescription" : "must contain only alphanumeric characters."
    },

    "InstanceType" : {
      "Description" : "WebServer EC2 instance type",
      "Type" : "String",
      "Default" : "t1.micro",
      "AllowedValues" : [ "t1.micro","m1.small","m1.medium","m1.large","m1.xlarge","m2.xlarge","m2.2xlarge","m2.4xlarge","m3.xlarge","m3.2xlarge","c1.medium","c1.xlarge","cc1.4xlarge","cc2.8xlarge","cg1.4xlarge"],
      "ConstraintDescription" : "must be a valid EC2 instance type."
    },

   "KeyName" : {
	"Description" :"Name-of-an-existing-EC2-KeyPair-to-enable-SSH-access-to-the-instances",
	"Type" : "String"
   }
  },
  
  "Mappings" : {
    "AWSInstanceType2Arch" : {
      "t1.micro"    : { "Arch" : "64" },
      "m1.small"    : { "Arch" : "64" },
      "m1.medium"   : { "Arch" : "64" },
      "m1.large"    : { "Arch" : "64" },
      "m1.xlarge"   : { "Arch" : "64" },
      "m2.xlarge"   : { "Arch" : "64" },
      "m2.2xlarge"  : { "Arch" : "64" },
      "m2.4xlarge"  : { "Arch" : "64" },
      "m3.xlarge"   : { "Arch" : "64" },
      "m3.2xlarge"  : { "Arch" : "64" },
      "c1.medium"   : { "Arch" : "64" },
      "c1.xlarge"   : { "Arch" : "64" },
      "cc1.4xlarge" : { "Arch" : "64HVM" },
      "cc2.8xlarge" : { "Arch" : "64HVM" },
      "cg1.4xlarge" : { "Arch" : "64HVM" }
    },

    "AWSRegionArch2AMI" : {
      "us-east-1"      : { "32" : "ami-a53264cc", "64" : "ami-a73264ce", "64HVM" : "NOT_YET_SUPPORTED" },
      "us-west-2"      : { "32" : "NOT_YET_SUPPORTED", "64" : "NOT_YET_SUPPORTED", "64HVM" : "NOT_YET_SUPPORTED" },
      "us-west-1"      : { "32" : "NOT_YET_SUPPORTED", "64" : "NOT_YET_SUPPORTED", "64HVM" : "NOT_YET_SUPPORTED" },
      "eu-west-1"      : { "32" : "NOT_YET_SUPPORTED", "64" : "NOT_YET_SUPPORTED", "64HVM" : "NOT_YET_SUPPORTED" },
      "ap-southeast-1" : { "32" : "NOT_YET_SUPPORTED", "64" : "NOT_YET_SUPPORTED", "64HVM" : "NOT_YET_SUPPORTED" },
      "ap-southeast-2" : { "32" : "NOT_YET_SUPPORTED", "64" : "NOT_YET_SUPPORTED", "64HVM" : "NOT_YET_SUPPORTED" },
      "ap-northeast-1" : { "32" : "NOT_YET_SUPPORTED", "64" : "NOT_YET_SUPPORTED", "64HVM" : "NOT_YET_SUPPORTED" },
      "sa-east-1"      : { "32" : "NOT_YET_SUPPORTED", "64" : "NOT_YET_SUPPORTED", "64HVM" : "NOT_YET_SUPPORTED" }
    }
  },
    
  "Resources" : {     
      
    "WebServer": {  
      "Type": "AWS::EC2::Instance",
      "Metadata" : {
        "Comment1" : "Configure the bootstrap helpers to install the Apache Web Server and PHP",
        "Comment2" : "The website content is downloaded from the CloudFormationPHPSample.zip file",

        "AWS::CloudFormation::Init" : {
          "config" : {
            "packages" : {
              "apt" : {
                "mysql-server"        : [],
                "mysql-client" : [],
                "apache2"        : [],
                "php5"          : [],
                "php5-mysql"    : []
              }
            },

            "files" : {
              "/tmp/setup.mysql" : {
                "content" : "CREATE DATABASE bakecrm;\n",
                "mode"    : "000644",
                "owner"   : "root",
                "group"   : "root"
              }
            },

            "services" : {
              "sysvinit" : {  
                "mysql" : {
                  "enabled"       : "true",
                  "ensureRunning" : "true"                
                },
                "apache2" : {
                  "enabled"       : "true",
                  "ensureRunning" : "true"                
                }
              }
            }
          }
        }
      },
      "Properties": {
        "ImageId" : { "Fn::FindInMap" : [ "AWSRegionArch2AMI", { "Ref" : "AWS::Region" },
                          { "Fn::FindInMap" : [ "AWSInstanceType2Arch", { "Ref" : "InstanceType" }, "Arch" ] } ] },
        "InstanceType"   : { "Ref" : "InstanceType" },
	"KeyName" : { "Ref" : "KeyName" },
        "SecurityGroups" : [ {"Ref" : "WebServerSecurityGroup"} ],
        "UserData"       : { "Fn::Base64" : { "Fn::Join" : ["", [
			"#!/bin/bash -v\n",
	  	  	"apt-get update \n",
			"apt-get -y install python-setuptools \n",
			"wget -P /root https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz \n",
			"mkdir -p /root/aws-cfn-bootstrap-latest \n",
			"tar xvfz /root/aws-cfn-bootstrap-latest.tar.gz --strip-components=1 -C /root/aws-cfn-bootstrap-latest \n",
			"easy_install /root/aws-cfn-bootstrap-latest/ \n",

          "# Helper function\n",
          "function error_exit\n",
          "{\n",
          "  /usr/local/bin/cfn-signal -e 1 -r \"$1\" '", { "Ref" : "WaitHandle" }, "'\n",
          "  exit 1\n",
          "}\n",

          "# Install LAMP packages\n",
          "/usr/local/bin/cfn-init -s ", { "Ref" : "AWS::StackId" }, " -r WebServer ",
		  "    --region ", { "Ref" : "AWS::Region" }, " || error_exit 'Failed to run cfn-init'\n",

          "# Setup MySQL, create a user and a database\n",
          "mysqladmin -u root password '", { "Ref" : "DBRootPassword" }, "' || error_exit 'Failed to initialize root password'\n",
          "mysql -u root --password='", { "Ref" : "DBRootPassword" }, "' < /tmp/setup.mysql || error_exit 'Failed to initialize database'\n",

          "# Configure the PHP application - in this case, fixup the page with the right references to the database\n",
          "# sed -i \"s/REPLACE_WITH_DATABASE/localhost/g\" /var/www/html/index.php\n",
          "# sed -i \"s/REPLACE_WITH_DBUSER/root/g\" /var/www/html/index.php\n",
          "# sed -i \"s/REPLACE_WITH_DBPASSWORD/", { "Ref" : "DBRootPassword" }, "/g\" /var/www/html/index.php\n",

          "# All is well so signal success\n",
          "/usr/local/bin/cfn-signal -e 0 -r \"LAMP Stack setup complete\" '", { "Ref" : "WaitHandle" }, "'\n"
        ]]}}        
      }
    },

    "WaitHandle" : {
      "Type" : "AWS::CloudFormation::WaitConditionHandle"
    },

    "WaitCondition" : {
      "Type" : "AWS::CloudFormation::WaitCondition",
      "DependsOn" : "WebServer",
      "Properties" : {
        "Handle" : {"Ref" : "WaitHandle"},
        "Timeout" : "180"
      }
    },
    
    "WebServerSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Enable HTTP access via port 80",
        "SecurityGroupIngress" : [
          {"IpProtocol" : "tcp", "FromPort" : "80", "ToPort" : "80", "CidrIp" : "0.0.0.0/0"},
	  {"IpProtocol" : "tcp", "FromPort" : "22", "ToPort" : "22", "CidrIp" : "0.0.0.0/0"}
        ]
      }      
    }          
  },
  
  "Outputs" : {
    "WebsiteURL" : {
      "Value" : { "Fn::Join" : ["", ["http://", { "Fn::GetAtt" : [ "WebServer", "PublicDnsName" ]}]] },
      "Description" : "URL for newly created LAMP stack"
    }
  }
}
